/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AdminStdView.java
 *
 * Created on Jan 17, 2011, 9:35:21 PM
 */

package iSUI.Panals;

import iSEngine.Sniffer;
import iSUI.MailManager;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import jpcap.*;

/**
 *
 * @author Administrator
 */
public class GeneralView extends javax.swing.JPanel {
    
    private Sniffer sniffer;
    DefaultTableModel model;
    private MailManager mgr;
    
    /** Creates new form AdminStdView */
    public GeneralView() {
        initComponents();
//        this.debuggerData();
        
    }
    
    public void setSniffer(Sniffer sniffer){
        this.sniffer = sniffer;
        this.setTableValues(this.sniffer.getNetworkInterfaces());
    }
    
    public void setManger(MailManager mgr){
        this.mgr = mgr;
    }
    
    private void deleteRows(){

        int numRows = this.model.getRowCount();

        for (int i=numRows-1; i >= 0; i--) {
          this.model.removeRow(i);
            System.out.println(""+1);
          this.jTableGeneral.revalidate();
        }

    }
    
    private void setTableValues(NetworkInterface[] devices){

        if(devices.length > 0){
            
            String temp = "";
            
            model = (DefaultTableModel) jTableGeneral.getModel();

            for(int i=0; i<devices.length; i++){
                for (byte b : devices[i].mac_address)
                    temp += (Integer.toHexString(b&0xff) + ":");
                model.addRow(new Object[]{i, devices[i].name, devices[i].description,temp});
                temp = "";
            }

        }else{
            JOptionPane.showMessageDialog(null, "There are no Network Interfaces available");
        }

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel10 = new javax.swing.JLabel();
        jPanelcomposemail = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableGeneral = new javax.swing.JTable();
        jButtonRefresh = new javax.swing.JButton();
        jComboBoxInterfaceID = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jButtonSetNetwrokId = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Options"));

        jLabel10.setFont(new java.awt.Font("Papyrus", 1, 24));
        jLabel10.setText("Options");

        jTableGeneral.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Description", "MAC Address"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Short.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableGeneral);

        javax.swing.GroupLayout jPanelcomposemailLayout = new javax.swing.GroupLayout(jPanelcomposemail);
        jPanelcomposemail.setLayout(jPanelcomposemailLayout);
        jPanelcomposemailLayout.setHorizontalGroup(
            jPanelcomposemailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelcomposemailLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 683, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelcomposemailLayout.setVerticalGroup(
            jPanelcomposemailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelcomposemailLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButtonRefresh.setText("Refresh");
        jButtonRefresh.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonRefresh.setFocusable(false);
        jButtonRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRefreshActionPerformed(evt);
            }
        });

        jComboBoxInterfaceID.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2", "3", "4" }));
        jComboBoxInterfaceID.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jComboBoxInterfaceID.setFocusable(false);

        jLabel1.setText("Select Network Interface");

        jButtonSetNetwrokId.setText("Select");
        jButtonSetNetwrokId.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonSetNetwrokId.setFocusable(false);
        jButtonSetNetwrokId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSetNetwrokIdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(183, 183, 183)
                        .addComponent(jLabel10))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanelcomposemail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jComboBoxInterfaceID, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonSetNetwrokId, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 331, Short.MAX_VALUE)
                .addComponent(jButtonRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelcomposemail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonRefresh)
                    .addComponent(jLabel1)
                    .addComponent(jButtonSetNetwrokId)
                    .addComponent(jComboBoxInterfaceID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(147, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefreshActionPerformed
        this.deleteRows();
        this.setTableValues(this.sniffer.getNetworkInterfaces());
    }//GEN-LAST:event_jButtonRefreshActionPerformed

    private void jButtonSetNetwrokIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSetNetwrokIdActionPerformed
        String netId = (String) this.jComboBoxInterfaceID.getSelectedItem();
        this.sniffer.setNetworkInterface(Integer.parseInt(netId));
        this.mgr.setAllButtonsEnable();
    }//GEN-LAST:event_jButtonSetNetwrokIdActionPerformed

   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonRefresh;
    private javax.swing.JButton jButtonSetNetwrokId;
    private javax.swing.JComboBox jComboBoxInterfaceID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JPanel jPanelcomposemail;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableGeneral;
    // End of variables declaration//GEN-END:variables

}
